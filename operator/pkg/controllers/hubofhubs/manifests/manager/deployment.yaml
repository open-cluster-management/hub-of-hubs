apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-global-hub-manager
  namespace: {{.Namespace}}
  labels:
    name: multicluster-global-hub-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multicluster-global-hub-manager
  template:
    metadata:
      labels:
        name: multicluster-global-hub-manager
    spec:
      serviceAccountName: multicluster-global-hub-manager
      containers:
        - name: multicluster-global-hub-manager
          image: "{{.Image}}"
          imagePullPolicy: Always
          args:
            - --zap-devel=true
            - --manager-namespace=$(POD_NAMESPACE)
            - --watch-namespace=$(WATCH_NAMESPACE)
            - --transport-type=kafka
            - --kafka-bootstrap-server={{.KafkaBootstrapServer}}
            - --kafka-ssl-ca={{.KafkaCA}}
            - --process-database-url=$(DATABASE_URL)
            - --transport-bridge-database-url=$(DATABASE_URL)
            - --cluster-api-cabundle-path=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - --server-certificate-path=/certs/tls.crt
            - --server-key-path=/certs/tls.key
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: WATCH_NAMESPACE
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: "{{.DBSecret}}"
                  key: database_uri
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: certs
      volumes:
        - name: certs
          secret:
            secretName: multicluster-global-hub-manager-certs
