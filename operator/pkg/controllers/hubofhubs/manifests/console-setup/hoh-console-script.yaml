apiVersion: v1
kind: ConfigMap
metadata:
  name:  multicluster-global-hub-console-script
  namespace: open-cluster-management
  labels:
    name: multicluster-global-hub-console
data:
  console-setup.sh: |
    #!/bin/bash
    set -e
    set -o pipefail

    kubectl get mutatingwebhookconfiguration ocm-mutating-webhook -o json \
      | jq --argjson rules_patch '{"apiGroups": ["policy.open-cluster-management.io"], "apiVersions": ["v1"], "operations": ["CREATE"], "resources": ["policies", "placementbindings"], "scope": "*"}' '.webhooks[0].rules += [$rules_patch]' \
      | jq 'del(.metadata.managedFields, .metadata.resourceVersion, .metadata.generation, .metadata.creationTimestamp)' \
      | kubectl apply -f -

    kubectl annotate mch multiclusterhub mch-pause=true -n open-cluster-management --overwrite

    helm get values -a -n open-cluster-management $(helm ls -n open-cluster-management | cut -d' ' -f1 | grep console-chart) -o yaml > /tmp/values.yaml
    kubectl delete appsub console-chart-sub -n open-cluster-management --ignore-not-found
    cat /tmp/values.yaml |
      yq e ".global.imageOverrides.console = \"quay.io/open-cluster-management-hub-of-hubs/console:v0.5.0\"" - |
      yq e '.global.pullPolicy = "Always"' - |
      helm upgrade console-chart charts/console-chart -n open-cluster-management --install -f -

    helm get values -a -n open-cluster-management $(helm ls -n open-cluster-management | cut -d' ' -f1 | grep grc) -o yaml > /tmp/values.yaml
    kubectl delete appsub grc-sub -n open-cluster-management --ignore-not-found
    cat /tmp/values.yaml |
      yq e ".global.imageOverrides.governance_policy_propagator = \"quay.io/open-cluster-management-hub-of-hubs/governance-policy-propagator:hub-of-hubs\"" - |
      yq e ".global.imageOverrides.grc_ui = \"quay.io/open-cluster-management-hub-of-hubs/grc-ui:v0.5.0\"" - |
      yq e ".global.imageOverrides.grc_ui_api = \"quay.io/stolostron/grc-ui-api:2.4.3-SNAPSHOT-2022-03-21-21-19-21\"" - |
      yq e '.global.pullPolicy = "Always"' - |
      helm upgrade grc charts/grc -n open-cluster-management --install -f -

    echo "" |
      yq e ".global.imageOverrides.application_ui = \"quay.io/open-cluster-management-hub-of-hubs/application-ui:v0.5.0\"" - |
      yq e ".global.imageOverrides.console_api = \"quay.io/stolostron/console-api:2.4.3-SNAPSHOT-2022-04-07-03-58-40\"" - |
      yq e '.global.pullPolicy = "Always"' - |
      helm upgrade application-chart charts/application-chart -n open-cluster-management --install -f -

    kubectl -n open-cluster-management patch $(kubectl get csv -oname -l operators.coreos.com/advanced-cluster-management.open-cluster-management -n open-cluster-management) --type=json -p='[{"op": "replace", "path": "/spec/install/spec/deployments/3/spec/template/spec/containers/0/image", "value":"quay.io/open-cluster-management-hub-of-hubs/multicloud-operators-subscription:hub-of-hubs"}]'

    cat <<EOF | kubectl apply -n multicluster-engine -f -
    apiVersion: v1
    data:
      manifest.json: |-
        [
          {
            "image-name": "placement",
            "image-remote": "quay.io/open-cluster-management-hub-of-hubs",
            "image-digest": "sha256:b7293b436dc00506b370762fb4eb352e7c6cc5413d135fc03c93ed311e7ed4c4",
            "image-key": "placement"
          }
        ]
    kind: ConfigMap
    metadata:
      name: hoh-images-config
    EOF

    kubectl annotate mce multiclusterengine --overwrite imageOverridesCM=hoh-images-config
  console-cleanup.sh: |
    #!/bin/bash
    set -e
    set -o pipefail

    helm uninstall console-chart -n open-cluster-management
    helm uninstall grc -n open-cluster-management
    helm uninstall application-chart -n open-cluster-management

    sub_image=$(kubectl get deploy multiclusterhub-operator -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="OPERAND_IMAGE_MULTICLUSTER_OPERATORS_SUBSCRIPTION")].value}')
    kubectl -n open-cluster-management patch $(kubectl get csv -oname -l operators.coreos.com/advanced-cluster-management.open-cluster-management -n open-cluster-management) --type=json -p='[{"op": "replace", "path": "/spec/install/spec/deployments/3/spec/template/spec/containers/0/image", "value":'"${sub_image}"'}]'

    kubectl annotate mch multiclusterhub mch-pause=false -n open-cluster-management --overwrite
    kubectl get mutatingwebhookconfiguration ocm-mutating-webhook -o json \
      | jq 'del(.webhooks[0].rules[] | select(.apiGroups == ["policy.open-cluster-management.io"]) )' \
      | jq 'del(.metadata.managedFields, .metadata.resourceVersion, .metadata.generation, .metadata.creationTimestamp)' \
      | kubectl apply -f -

    kubectl annotate mce multiclusterengine --overwrite imageOverridesCM=
    kubectl delete configmap hoh-images-config -n multicluster-engine --ignore-not-found
