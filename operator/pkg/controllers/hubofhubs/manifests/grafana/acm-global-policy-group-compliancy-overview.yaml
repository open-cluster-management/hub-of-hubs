apiVersion: v1
data:
  acm-global-policy-group-compliancy-overview.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "iteration": 1685519144608,
      "links": [
        {
          "asDropdown": false,
          "icon": "external link",
          "includeVars": true,
          "keepTime": true,
          "tags": [],
          "targetBlank": true,
          "title": "Offending Policies",
          "tooltip": "",
          "type": "link",
          "url": "d/b67e0727891f4121ae2dde09671520ae/global-hub-offending-policies?orgId=1"
        }
      ],
      "panels": [
        {
          "datasource": "${datasource}",
          "description": "Aggregated policy group trend by standard, category, control, and severity.",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "links": [
                {
                  "targetBlank": true,
                  "title": "View Offending Policies for Control Group: ${__field.name}",
                  "url": "d/b67e0727891f4121ae2dde09671520ae/global-hub-offending-policies?orgId=1&from=${__value.time}&to=${__value.time}&var-standard=All&var-category=All&var-control=${__field.name}"
                }
              ],
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 28,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.5.20",
          "targets": [
            {
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH data as (\n  SELECT\n    ch.compliance_date,\n    p.policy_control,\n    jsonb_array_elements(p.payload -> 'spec' -> 'policy-templates') -> 'objectDefinition' -> 'spec' ->> 'severity' AS \"severity\",\n    COUNT(CASE WHEN ch.compliance = 'non_compliant' THEN 1 END) AS \"non_compliant\",\n    COUNT(CASE WHEN ch.compliance = 'unknown' THEN 1 END) AS \"unknown\",\n    COUNT(CASE WHEN ch.compliance = 'compliant' THEN 1 END) AS \"compliant\"\n  FROM\n    local_spec.policies p\n  INNER JOIN\n    history.local_compliance ch ON p.policy_id = ch.id\n  WHERE\n    p.policy_standard IN ($standard) AND p.policy_category IN ($category) AND p.policy_control IN ($control)\n  GROUP BY\n    ch.compliance_date, p.payload, p.policy_control\n  ORDER BY\n    ch.compliance_date\n)\nSELECT\n  compliance_date as \"time\",\n  policy_control as \"metric\",\n  compliant::float / (unknown::float + compliant::float + non_compliant) as \"value\"\nFROM\n  data\nWHERE\n  severity IN ($severity)\nORDER BY\n  compliance_date",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Compliancy Trend - Severity ($severity)",
          "type": "timeseries"
        }
      ],
      "refresh": "",
      "schemaVersion": 30,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Global-Hub-DataSource",
              "value": "Global-Hub-DataSource"
            },
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "datasource",
            "options": [],
            "query": "postgres",
            "queryValue": "",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${datasource}",
            "definition": "SELECT\n  policy_standard\nFROM\n  local_spec.policies",
            "description": "Cluster policy standards",
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Standard",
            "multi": true,
            "name": "standard",
            "options": [],
            "query": "SELECT\n  policy_standard\nFROM\n  local_spec.policies",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "type": "query"
          },
          {
            "allValue": null,
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${datasource}",
            "definition": "SELECT\n  policy_category\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)",
            "description": "Cluster policy categories",
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Category",
            "multi": true,
            "name": "category",
            "options": [],
            "query": "SELECT\n  policy_category\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "type": "query"
          },
          {
            "allValue": null,
            "current": {
              "selected": false,
              "text": "All",
              "value": "$__all"
            },
            "datasource": "${datasource}",
            "definition": "SELECT\n  policy_control\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)\nAND\n  policy_category IN ($category)",
            "description": "Cluster policy controls",
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Control",
            "multi": true,
            "name": "control",
            "options": [],
            "query": "SELECT\n  policy_control\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)\nAND\n  policy_category IN ($category)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "type": "query"
          },
          {
            "allValue": null,
            "current": {
              "selected": true,
              "text": [
                "All"
              ],
              "value": [
                "$__all"
              ]
            },
            "datasource": "${datasource}",
            "definition": "SELECT\n  jsonb_array_elements(payload -> 'spec' -> 'policy-templates') -> 'objectDefinition' -> 'spec' ->> 'severity' as \"severity\"\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)\nAND\n  policy_category IN ($category)\nAND\n  policy_control IN ($control)",
            "description": "Cluster policy severity",
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Severity",
            "multi": true,
            "name": "severity",
            "options": [],
            "query": "SELECT\n  jsonb_array_elements(payload -> 'spec' -> 'policy-templates') -> 'objectDefinition' -> 'spec' ->> 'severity' as \"severity\"\nFROM\n  local_spec.policies\nWHERE\n  policy_standard IN ($standard)\nAND\n  policy_category IN ($category)\nAND\n  policy_control IN ($control)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 5,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-7d",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Global Hub - Policy Group Compliancy Overview",
      "uid": "9bb3bee6a17e47f9a231f6d77f2408fa",
      "version": 1
    }
kind: ConfigMap
metadata:
  name: grafana-dashboard-acm-global-policy-group-compliancy-overview
  namespace: {{.Namespace}}
