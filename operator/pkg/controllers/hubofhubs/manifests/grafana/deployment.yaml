apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: multicluster-global-hub-grafana
  name: multicluster-global-hub-grafana
  namespace: {{.Namespace}}
spec:
  replicas: {{.Replicas}}
  selector:
    matchLabels:
      name: multicluster-global-hub-grafana
  template:
    metadata:
      labels:
        name: multicluster-global-hub-grafana
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - multicluster-global-hub-grafana
          - weight: 30
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - multicluster-global-hub-grafana
      containers:
      - args:
        - -config=/etc/grafana/grafana.ini
        image: {{.GrafanaImage}}
        imagePullPolicy: {{.ImagePullPolicy}}
        name: grafana
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        - containerPort: 9094
          name: grafana-alert
          protocol: TCP
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
        {{- if .Resources.Limits }}
          limits:
            {{- range $key, $value := .Resources.Limits }}
            {{$key}}: {{.ToUnstructured}}
            {{- end }}
        {{- end }}
        {{- if .Resources.Requests }}
          requests:
            {{- range $key, $value := .Resources.Requests }}
            {{$key}}: {{.ToUnstructured}}
            {{- end }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
        - mountPath: /etc/grafana/provisioning/alerting
          name: multicluster-global-hub-alerting
        - mountPath: /grafana-dashboards/0/acm-global-overview
          name: grafana-dashboard-acm-global-overview
        - mountPath: /grafana-dashboards/0/acm-global-cluster-group-compliancy-overview
          name: grafana-dashboard-acm-global-cluster-group-compliancy-overview
        - mountPath: /grafana-dashboards/0/acm-global-policy-group-compliancy-overview
          name: grafana-dashboard-acm-global-policy-group-compliancy-overview
        - mountPath: /grafana-dashboards/0/acm-global-adhoc-investigation
          name: grafana-dashboard-acm-global-adhoc-investigation
        - mountPath: /grafana-dashboards/0/acm-global-offending-clusters
          name: grafana-dashboard-acm-global-offending-clusters
        - mountPath: /grafana-dashboards/0/acm-global-offending-policies
          name: grafana-dashboard-acm-global-offending-policies
        - mountPath: /grafana-dashboards/0/acm-global-whats-changed-clusters
          name: grafana-dashboard-acm-global-whats-changed-clusters
        - mountPath: /grafana-dashboards/0/acm-global-whats-changed-policies
          name: grafana-dashboard-acm-global-whats-changed-policies
        - mountPath: /etc/grafana
          name: grafana-config
      - readinessProbe:
          httpGet:
            path: /oauth/healthz
            port: 9443
            scheme: HTTPS
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        name: grafana-proxy
        ports:
          - name: public
            containerPort: 9443
            protocol: TCP
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: tls-secret
            mountPath: /etc/tls/private
          - mountPath: /etc/proxy/secrets
            name: cookie-secret
        image: {{.ProxyImage}}
        imagePullPolicy: {{.ImagePullPolicy}}
        args:
          - '--provider=openshift'
          - '--upstream=http://localhost:3001'
          - '--https-address=:9443'
          - '--cookie-secret-file=/etc/proxy/secrets/session_secret'
          - '--cookie-expire=12h0m0s'
          - '--cookie-refresh=8h0m0s'
          - '--openshift-delegate-urls={"/": {"resource": "projects", "verb": "list"}}'
          - '--tls-cert=/etc/tls/private/tls.crt'
          - '--tls-key=/etc/tls/private/tls.key'
          - '--openshift-service-account=multicluster-global-hub-grafana'
          - '--pass-user-bearer-token=true'
          - '--pass-access-token=true'
          - '--openshift-ca=/etc/pki/tls/cert.pem'
          - '--openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
      serviceAccount: multicluster-global-hub-grafana
      {{- if .ImagePullSecret }}
      imagePullSecrets:
        - name: {{.ImagePullSecret}}
      {{- end }}
      nodeSelector:
        {{- range $key, $value := .NodeSelector}}
        "{{$key}}": "{{$value}}"
        {{- end}}
      tolerations:
        {{- range .Tolerations}}
        - key: "{{.Key}}"
          operator: "{{.Operator}}"
          value: "{{.Value}}"
          effect: "{{.Effect}}"
          {{- if .TolerationSeconds}}
          tolerationSeconds: {{.TolerationSeconds}}
          {{- end}}
        {{- end}}
      serviceAccountName: multicluster-global-hub-grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          defaultMode: 420
          secretName: {{.DatasourceSecretName}}
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-cluster-group-compliancy-overview
        name: grafana-dashboard-acm-global-cluster-group-compliancy-overview
      - configMap:
          defaultMode: 420
          name: multicluster-global-hub-alerting
        name: multicluster-global-hub-alerting  
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-policy-group-compliancy-overview
        name: grafana-dashboard-acm-global-policy-group-compliancy-overview
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-offending-clusters
        name: grafana-dashboard-acm-global-offending-clusters
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-adhoc-investigation
        name: grafana-dashboard-acm-global-adhoc-investigation
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-offending-policies
        name: grafana-dashboard-acm-global-offending-policies
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-whats-changed-clusters
        name: grafana-dashboard-acm-global-whats-changed-clusters
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-whats-changed-policies
        name: grafana-dashboard-acm-global-whats-changed-policies
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-acm-global-overview
        name: grafana-dashboard-acm-global-overview
      - name: grafana-config
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-config
      - name: tls-secret
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-tls
      - name: cookie-secret
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-cookie-secret
