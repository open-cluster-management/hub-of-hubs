apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: multicluster-global-hub-grafana
  name: multicluster-global-hub-grafana
  namespace: {{.Namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multicluster-global-hub-grafana
  template:
    metadata:
      labels:
        name: multicluster-global-hub-grafana
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - multicluster-observability-grafana
          - weight: 30
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - multicluster-observability-grafana
      containers:
      - args:
        - -config=/etc/grafana/grafana.ini
        image: quay.io/stolostron/grafana:2.8.0-SNAPSHOT-2023-03-06-01-52-34
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 4m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana
          name: grafana-config
      - readinessProbe:
          httpGet:
            path: /oauth/healthz
            port: 9443
            scheme: HTTPS
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        name: grafana-proxy
        ports:
          - name: public
            containerPort: 9443
            protocol: TCP
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: tls-secret
            mountPath: /etc/tls/private
          - mountPath: /etc/proxy/secrets
            name: cookie-secret
        image: {{.ProxyImage}}
        args:
          - '--provider=openshift'
          - '--upstream=http://localhost:3001'
          - '--https-address=:9443'
          - '--cookie-secret-file=/etc/proxy/secrets/session_secret'
          - '--cookie-expire=12h0m0s'
          - '--cookie-refresh=8h0m0s'
          - '--openshift-delegate-urls={"/": {"resource": "projects", "verb": "list"}}'
          - '--tls-cert=/etc/tls/private/tls.crt'
          - '--tls-key=/etc/tls/private/tls.key'
          - '--openshift-service-account=grafana'
          - '--pass-user-bearer-token=true'
          - '--pass-access-token=true'
          - '--openshift-ca=/etc/pki/tls/cert.pem'
          - '--openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
      serviceAccount: grafana
      imagePullSecrets:
      - name: multiclusterhub-operator-pull-secret
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-datasource
      - name: grafana-config
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-config
      - name: tls-secret
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-tls
      - name: cookie-secret
        secret:
          defaultMode: 420
          secretName: multicluster-global-hub-grafana-cookie-secret