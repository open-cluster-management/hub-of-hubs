{{ if not .InstallHostedMode }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-global-hub-agent
  namespace: {{ .AddonInstallNamespace }}
  labels:
    addon.open-cluster-management.io/hosted-manifest-location: none
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multicluster-global-hub-agent
  template:
    metadata:
      labels:
        name: multicluster-global-hub-agent
    spec:
      serviceAccountName: multicluster-global-hub-agent
      containers:
        - name: multicluster-global-hub-agent
          image: {{ .HoHAgentImage }}
          resources:
          {{- if .Resources.Limits }}
            limits:
              {{- range $key, $value := .Resources.Limits }}
              {{$key}}: {{$value}}
              {{- end }}
          {{- end }}
          {{- if .Resources.Requests }}
            requests:
              {{- range $key, $value := .Resources.Requests }}
              {{$key}}: {{$value}}
              {{- end }}
          {{- end }}
          imagePullPolicy: {{ .ImagePullPolicy }}
          args:
            - --zap-log-level={{.LogLevel}}
            - --pod-namespace=$(POD_NAMESPACE)
            - --leaf-hub-name={{ .LeafHubID }}
            - --kafka-consumer-id={{ .LeafHubID }}
            - --enforce-hoh-rbac=false
            - --transport-type={{ .TransportType }}
            - --kafka-bootstrap-server={{ .KafkaBootstrapServer }}
            - --kafka-ca-cert-path=/kafka-certs/ca.crt
            - --kafka-client-cert-path=/kafka-certs/client.crt
            - --kafka-client-key-path=/kafka-certs/client.key
            - --kafka-consumer-topic={{.KafkaConsumerTopic}}
            - --kafka-producer-topic={{.KafkaProducerTopic}}
            - --transport-message-compression-type={{.MessageCompressionType}}
            - --lease-duration={{.LeaseDuration}}
            - --renew-deadline={{.RenewDeadline}}
            - --retry-period={{.RetryPeriod}}
            - --kubernetes-event-exporter-config=/kube-event/config.yaml
            - --enable-global-resource={{.EnableGlobalResource}}
            - --qps={{.AgentQPS}}
            - --burst={{.AgentBurst}}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.namespace
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.namespace
          volumeMounts:
          - mountPath: /kafka-certs
            name: kafka-certs
            readOnly: true
          - mountPath: /kube-event
            name: kubernetes-event-exporter-config
      {{- if .ImagePullSecretName }}
      imagePullSecrets:
        - name: {{ .ImagePullSecretName }}
      {{- end }}
      nodeSelector:
        {{- range $key, $value := .NodeSelector}}
        "{{$key}}": "{{$value}}"
        {{- end}}
      tolerations:
        {{- range .Tolerations}}
        - key: "{{.Key}}"
          operator: "{{.Operator}}"
          value: "{{.Value}}"
          effect: "{{.Effect}}"
          {{- if .TolerationSeconds}}
          tolerationSeconds: {{.TolerationSeconds}}
          {{- end}}
        {{- end}}
      volumes:
      - name: kafka-certs
        secret:
          secretName: kafka-certs-secret
      - name: kubernetes-event-exporter-config
        configMap:
          name: kubernetes-event-exporter-config
{{ end }}
