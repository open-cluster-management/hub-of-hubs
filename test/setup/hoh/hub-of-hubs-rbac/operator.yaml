---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${COMPONENT}
---
apiVersion: v1
kind: Service
metadata:
  name: hub-of-hubs-rbac
  labels:
    app: hub-of-hubs-rbac
    service: hub-of-hubs-rbac
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: hub-of-hubs-rbac-certs
spec:
  ports:
  - port: 8181
    name: http
  selector:
    name: hub-of-hubs-rbac
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hub-of-hubs-rbac-ca-bundle
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  labels:
    service: hub-of-hubs-rbac
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${COMPONENT}
spec:
  replicas: 2
  selector:
    matchLabels:
      name: ${COMPONENT}
  template:
    metadata:
      labels:
        name: ${COMPONENT}
    spec:
      serviceAccountName: ${COMPONENT}
      containers:
        - name: ${COMPONENT}
          image: ${REGISTRY}/${COMPONENT}:${IMAGE_TAG}
          imagePullPolicy: Always
          args:
          - "/data/opa_authorization.rego"
          - "/data/data.json"
          - "/data/role_bindings.yaml"
          - "--tls-cert-file=/certs/tls.crt"
          - "--tls-private-key-file=/certs/tls.key"
          - "--authorization=basic"
          volumeMounts:
           - readOnly: true
             mountPath: /data
             name: opa-data
           - readOnly: true
             mountPath: /certs
             name: certs
      volumes:
       - name: opa-data
         secret:
           secretName: opa-data
       - name: certs
         secret:
           secretName: hub-of-hubs-rbac-certs
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-within-namespace-for-opa
spec:
  podSelector:
    matchLabels:
      name: hub-of-hubs-rbac
  ingress:
  - from:
    - podSelector: {}