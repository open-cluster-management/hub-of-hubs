---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-globalhub-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multicluster-globalhub-manager
  template:
    metadata:
      labels:
        name: multicluster-globalhub-manager
    spec:
      serviceAccountName: multicluster-globalhub-manager
      containers:
        - name: multicluster-globalhub-manager
          image: ${HUB_OF_HUBS_MANAGER_IMAGE_REF}
          imagePullPolicy: Always
          args:
            - --zap-devel=true
            - --manager-namespace=$(POD_NAMESPACE)
            - --watch-namespace=$(WATCH_NAMESPACE)
            - --transport-type=${TRANSPORT_TYPE}
            - --process-database-url=$(PROCESS_DATABASE_URL)
            - --transport-bridge-database-url=$(TRANSPORT_BRIDGE_DATABASE_URL)
            - --authorization-cabundle-path=/multicluster-globalhub-rbac-ca/service-ca.crt
            - --cluster-api-cabundle-path=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - --server-certificate-path=/certs/tls.crt
            - --server-key-path=/certs/tls.key
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.namespace
            - name: WATCH_NAMESPACE
            - name: PROCESS_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: multicluster-globalhub-database-secret
                  key: url
            - name: TRANSPORT_BRIDGE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: multicluster-globalhub-database-transport-bridge-secret
                  key: url
          volumeMounts:
            - readOnly: true
              mountPath: /multicluster-globalhub-rbac-ca
              name: multicluster-globalhub-rbac-ca
            - readOnly: true
              mountPath: /certs
              name: certs
      volumes:
        - name: multicluster-globalhub-rbac-ca
          configMap:
            name: multicluster-globalhub-rbac-ca-bundle
        - name: certs
          secret:
            secretName: multicluster-globalhub-manager-certs
# --- use the ingress + clusterIp service for production
# apiVersion: v1
# kind: Service
# metadata:
#   name: multicluster-globalhub-manager
#   labels:
#     name: multicluster-globalhub-manager
#     service: multicluster-globalhub-manager
#   annotations:
#     service.beta.openshift.io/serving-cert-secret-name: multicluster-globalhub-manager-certs
# spec:
#   ports:
#   - port: 8080
#     name: http
#   selector:
#     name: multicluster-globalhub-manager
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     ingress.open-cluster-management.io/auth-type: access-token
#     ingress.open-cluster-management.io/secure-backends: "true"
#     kubernetes.io/ingress.class: ingress-open-cluster-management
#   name: multicluster-globalhub-manager
#   labels:
#     name: multicluster-globalhub-manager
# spec:
#   rules:
#   - http:
#       paths:
#       - backend:
#           service:
#             name: multicluster-globalhub-manager
#             port:
#               number: 8080
#         path: /multicloud/multicluster-globalhub-nonk8s-api
#         pathType: ImplementationSpecific
---
# use the nodeport service for test 
apiVersion: v1
kind: Service
metadata:
  name: multicluster-globalhub-manager
  labels:
    name: multicluster-globalhub-manager
    service: multicluster-globalhub-manager
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: multicluster-globalhub-manager-certs
spec:
  type: NodePort
  ports:
  - nodePort: 30080
    port: 8080
    name: http
    protocol: TCP
  selector:
    name: multicluster-globalhub-manager
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: multicluster-globalhub-manager-ca-bundle
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  labels:
    service: multicluster-globalhub-manager
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multicluster-globalhub-manager
subjects:
- kind: ServiceAccount
  name: multicluster-globalhub-manager
  namespace: open-cluster-management
roleRef:
  kind: ClusterRole
  name: multicluster-globalhub-manager
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multicluster-globalhub-manager
rules:
- apiGroups:
  - "policy.open-cluster-management.io"
  resources:
  - policies
  - policies/status
  - policies/finalizers
  - placementbindings
  - placementbindings/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - "apps.open-cluster-management.io"
  resources:
  - placementrules
  - placementrules/status
  - subscriptionstatuses
  - subscriptionstatuses/status
  - subscriptionreports
  - subscriptionreports/status
  - subscriptions/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - "cluster.open-cluster-management.io"
  resources:
  - placements
  - placements/finalizers
  - placements/status
  - placementdecisions
  - placementdecisions/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - "cluster.open-cluster-management.io"
  resources:
  - managedclustersets
  - managedclustersets/finalizers
  - managedclustersetbindings
  - managedclustersetbindings/finalizers
  - placements
  - placements/finalizers
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "apps.open-cluster-management.io"
  resources:
  - placementrules
  - placementrules/finalizers
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "apps.open-cluster-management.io"
  resources:
  - subscriptions
  - channels
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "app.k8s.io"
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: multicluster-globalhub-manager
subjects:
- kind: ServiceAccount
  name: multicluster-globalhub-manager
roleRef:
  kind: Role
  name: multicluster-globalhub-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: multicluster-globalhub-manager
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - multicluster-globalhub-manager
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - get
  - create
  - update
  - delete
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multicluster-globalhub-manager